{"version":3,"sources":["assets/ready2count_optimal.m4a","assets/wow_incredible.m4a","assets/failure_sound.m4a","components/messageBox.jsx","components/startButton.jsx","components/gameBoard.jsx","App.tsx","index.tsx"],"names":["module","exports","MessageBox","message","secondsCountingStarted","time","counter","gameOn","gameOver","Fragment","style","height","className","length","StartButton","onStartButtonClick","clockStop","resetGame","onClick","disabled","GameBoard","props","addTimerClasses","addDifferenceClasses","fontWeight","currentTime","difference","toFixed","Math","abs","calculateDifference","countdownText","audioReady","Audio","readySound","audioIncredible","wow_incredible","audioFailure","failure_sound","App","intervalID","state","startTime","updatedTime","instructionText","startButtonClicked","play","setState","handleCountdownText","setTimeout","shift","clockStart","tick","Date","getTime","window","setInterval","clearInterval","base","setInstructions","setInstructionsClasses","document","title","this","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.168abccd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ready2count_optimal.e0370398.m4a\";","module.exports = __webpack_public_path__ + \"static/media/wow_incredible.863679ba.m4a\";","module.exports = __webpack_public_path__ + \"static/media/failure_sound.9ad5cf3f.m4a\";","import React from \"react\";\n\nconst MessageBox = ({\n  message,\n  secondsCountingStarted,\n  time,\n  counter,\n  gameOn,\n  gameOver,\n}) => {\n  return (\n    <React.Fragment>\n      {!gameOver && (\n        <div style={{ height: 100 }} className=\"row justify-content-center\">\n          <div className=\"gameMessage\">{message}</div>\n        </div>\n      )}\n\n      {!secondsCountingStarted && time >= 9.5 && time <= 10.5 && (\n        <div style={{ height: 100 }} className=\"row justify-content-center\">\n          <div className=\"messageSuccess\">Incredible!</div>\n        </div>\n      )}\n      {counter.length === 1 && gameOn && !secondsCountingStarted && time < 9.5 && (\n        <div style={{ height: 100 }} className=\"row justify-content-center\">\n          <div className=\"messageFailure\">Too Quick</div>\n        </div>\n      )}\n      {!secondsCountingStarted && time > 10.5 && (\n        <div style={{ height: 100 }} className=\"row justify-content-center\">\n          <div className=\"messageFailure\">Too Slow</div>\n        </div>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default MessageBox;\n","import React from \"react\";\n\nconst StartButton = ({\n  onStartButtonClick,\n  gameOn,\n  gameOver,\n  secondsCountingStarted,\n  clockStop,\n  resetGame,\n}) => {\n  return (\n    <React.Fragment>\n      <div className=\"row startContainer justify-content-center\">\n        {!gameOn && !gameOver && (\n          <button\n            className=\"btn btn-primary mt-3 mb-3\"\n            onClick={() => {\n              onStartButtonClick();\n            }}\n            disabled={gameOn ? \"disabled\" : \"\"}\n          >\n            START\n          </button>\n        )}\n      </div>\n      <div className=\"row justify-content-center\">\n        {gameOn && !gameOver && (\n          <button\n            className=\"btn btn-primary mt-3 mb-3\"\n            onClick={() => clockStop()}\n            disabled={secondsCountingStarted ? \"\" : \"disabled\"}\n          >\n            STOP\n          </button>\n        )}\n      </div>\n      <div className=\"row justify-content-center\">\n        {gameOver ? (\n          <button\n            className=\"btn btn-primary mt-3 mb-3\"\n            onClick={() => resetGame()}\n          >\n            RESET\n          </button>\n        ) : null}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default StartButton;\n","import React from \"react\";\n\nfunction GameBoard(props) {\n  const calculateDifference = (currentTime) => {\n    let difference = (currentTime - 10).toFixed(2);\n\n    return Math.abs(difference);\n  };\n\n  return (\n    <React.Fragment>\n      <div>\n        <div className={props.addTimerClasses()}>{props.time}</div>\n        <div className={props.addDifferenceClasses()}>\n          <span style={{ fontWeight: \"bold\" }}>\n            {calculateDifference(props.time)}\n          </span>\n        </div>\n        <p className={props.addDifferenceClasses()}>seconds away</p>\n      </div>\n    </React.Fragment>\n  );\n}\n\n// const GameBoard = ({ time, addTimerClasses, addDifferenceClasses }) => {\n\nexport default GameBoard;\n","import React, { Component } from \"react\";\nimport MessageBox from \"./components/messageBox\";\nimport StartButton from \"./components/startButton\";\nimport \"./App.css\";\nimport GameBoard from \"./components/gameBoard\";\nimport readySound from \"./assets/ready2count_optimal.m4a\";\nimport wow_incredible from \"./assets/wow_incredible.m4a\";\nimport failure_sound from \"./assets/failure_sound.m4a\";\n\n// component interface: inputs and events\nconst countdownText = [\"\", \"Ready\", \"Ready\", \"3\", \"2\", \"1\", \"Go!\"];\nconst audioReady = new Audio(readySound);\nconst audioIncredible = new Audio(wow_incredible);\nconst audioFailure = new Audio(failure_sound);\n\nclass App extends Component {\n  intervalID!: number;\n\n  state = {\n    counter: countdownText,\n    gameOn: false,\n    gameOver: false,\n    secondsCountingStarted: false,\n    time: 0,\n    startTime: 0,\n    updatedTime: 0,\n    instructionText: [\n      \"press START\",\n      \"press STOP after 10 seconds\",\n      \"game over\",\n    ],\n  };\n\n  startButtonClicked = () => {\n    audioReady.play();\n    this.setState({ gameOn: true });\n    this.handleCountdownText();\n  };\n\n  handleCountdownText = () => {\n    const counter = [...this.state.counter];\n\n    if (counter.length > 1) {\n      setTimeout(() => {\n        counter.shift();\n        this.setState({ counter });\n        this.handleCountdownText();\n      }, 1000);\n    } else {\n      this.clockStart();\n      this.setState({ secondsCountingStarted: true });\n    }\n  };\n\n  tick = () => {\n    let updatedTime = new Date().getTime();\n    let difference = updatedTime - this.state.startTime;\n\n    this.setState({\n      time: ((difference % (1000 * 60)) / 1000).toFixed(2),\n    });\n  };\n\n  clockStart = () => {\n    this.setState({ startTime: new Date().getTime() });\n    this.intervalID = window.setInterval(() => this.tick(), 10);\n  };\n\n  clockStop = () => {\n    clearInterval(this.intervalID);\n    this.setState({ secondsCountingStarted: false, gameOver: true });\n    if (this.state.time > 9.5 && this.state.time < 10.5) audioIncredible.play();\n    else audioFailure.play();\n  };\n\n  addTimerClasses = () => {\n    let base = \"row justify-content-center gameCounter \";\n    if (!this.state.gameOn && !this.state.secondsCountingStarted) return base;\n    if (this.state.gameOn && !this.state.secondsCountingStarted)\n      return base + \"unhidden\";\n    if (this.state.secondsCountingStarted && this.state.gameOn)\n      return base + \"fade-out\";\n  };\n\n  addDifferenceClasses = () => {\n    let base = \"row justify-content-center difference \";\n    if (this.state.gameOver && this.state.gameOn) return base + \"unhidden\";\n    else return base;\n  };\n\n  resetGame = () => {\n    this.setState({\n      counter: countdownText,\n      gameOn: false,\n      gameOver: false,\n      secondsCountingStarted: false,\n      time: 0,\n      startTime: 0,\n      updatedTime: 0,\n    });\n  };\n\n  setInstructions = () => {\n    if (!this.state.gameOn && !this.state.gameOver)\n      return this.state.instructionText[0];\n    if (this.state.gameOn && !this.state.gameOver)\n      return this.state.instructionText[1];\n    if (this.state.gameOver) return this.state.instructionText[2];\n  };\n\n  setInstructionsClasses = () => {\n    let classes = \"row justify-content-center \";\n    return (classes += !this.state.gameOn ? \"blinking\" : \"\");\n  };\n\n  componentDidMount() {\n    document.title = \"Seconds Counter Game\";\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\"></header>\n        <div className=\"container\">\n          <h1 className=\"row justify-content-center\">10 Seconds</h1>\n          <h4 className=\"row justify-content-center\">the game</h4>\n          <h6 className={this.setInstructionsClasses()}>\n            {this.setInstructions()}\n          </h6>\n          <MessageBox\n            message={this.state.counter[0]}\n            secondsCountingStarted={this.state.secondsCountingStarted}\n            time={this.state.time}\n            counter={this.state.counter}\n            gameOn={this.state.gameOn}\n            gameOver={this.state.gameOver}\n          />\n          <GameBoard\n            time={this.state.time}\n            addTimerClasses={this.addTimerClasses}\n            addDifferenceClasses={this.addDifferenceClasses}\n            gameOver={this.state.gameOver}\n          />\n          <StartButton\n            onStartButtonClick={this.startButtonClicked}\n            gameOn={this.state.gameOn}\n            resetGame={this.resetGame}\n            gameOver={this.state.gameOver}\n            secondsCountingStarted={this.state.secondsCountingStarted}\n            clockStop={this.clockStop}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}