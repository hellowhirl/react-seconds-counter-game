{"version":3,"sources":["components/messageBox.jsx","components/startButton.jsx","components/gameBoard.jsx","components/resultsDisplay.jsx","App.js","index.js","assets/ready2count.m4a"],"names":["MessageBox","message","Fragment","style","height","className","StartButton","onStartButtonClick","gameOn","gameOver","secondsCountingStarted","clockStop","resetGame","onClick","disabled","GameBoard","time","addTimerClasses","ResultsDisplay","counter","marginBottom","marginTop","length","countdownText","audio","Audio","readySound","audioFiles","preloadAudio","url","addEventListener","loadedAudio","src","loaded","i","onended","play","init","index","pause","App","state","startTime","updatedTime","startButtonClicked","setState","handleCountdownText","setTimeout","shift","clockStart","tick","difference","Date","getTime","toFixed","intervalID","setInterval","clearInterval","base","document","title","display","fontWeight","this","Component","ReactDOM","render","getElementById","module","exports"],"mappings":"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","file":"static/js/main.538c8a56.chunk.js","sourcesContent":["import React from \"react\";\n\nconst MessageBox = ({ message }) => {\n  return (\n    <React.Fragment>\n      <div style={{ height: 100 }} className=\"row justify-content-center\">\n        <div className=\"gameMessage\">{message}</div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default MessageBox;\n","import React from \"react\";\n\nconst StartButton = ({\n  onStartButtonClick,\n  gameOn,\n  gameOver,\n  secondsCountingStarted,\n  clockStop,\n  resetGame,\n}) => {\n  return (\n    <React.Fragment>\n      <div className=\"row startContainer justify-content-center\">\n        {!gameOn && !gameOver && (\n          <button\n            className=\"btn btn-primary mt-3 mb-3\"\n            onClick={() => {\n              onStartButtonClick();\n            }}\n            disabled={gameOn ? \"disabled\" : \"\"}\n          >\n            START\n          </button>\n        )}\n      </div>\n      <div className=\"row justify-content-center\">\n        {gameOn && !gameOver && (\n          <button\n            className=\"btn btn-primary mt-3 mb-3\"\n            onClick={() => clockStop()}\n            disabled={secondsCountingStarted ? \"\" : \"disabled\"}\n          >\n            STOP\n          </button>\n        )}\n      </div>\n      <div className=\"row justify-content-center\">\n        {gameOver ? (\n          <button\n            className=\"btn btn-primary mt-3 mb-3\"\n            onClick={() => resetGame()}\n          >\n            RESET\n          </button>\n        ) : null}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default StartButton;\n","import React from \"react\";\n\nconst GameBoard = ({ time, addTimerClasses }) => {\n  return (\n    <React.Fragment>\n      <div className={addTimerClasses()}>{time}</div>\n    </React.Fragment>\n  );\n};\n\nexport default GameBoard;\n","import React from \"react\";\n\nconst ResultsDisplay = ({ secondsCountingStarted, time, counter, gameOn }) => {\n  return (\n    <React.Fragment>\n      <div\n        style={{ marginBottom: 20, marginTop: 10 }}\n        className=\"row justify-content-center\"\n      >\n        {!secondsCountingStarted && time >= 9.5 && time <= 10.5 && (\n          <div className=\"messageSuccess\">Excellent!</div>\n        )}\n        {counter.length === 1 &&\n          gameOn &&\n          !secondsCountingStarted &&\n          time < 9.5 && <div className=\"messageFailure\">Too Quick</div>}\n        {!secondsCountingStarted && time > 10.5 && (\n          <div className=\"messageFailure\">Too Slow</div>\n        )}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default ResultsDisplay;\n","import React, { Component } from \"react\";\nimport MessageBox from \"./components/messageBox\";\nimport StartButton from \"./components/startButton\";\nimport \"./App.css\";\nimport GameBoard from \"./components/gameBoard\";\nimport ResultsDisplay from \"./components/resultsDisplay\";\nimport readySound from \"./assets/ready2count.m4a\";\n\n// component interface: inputs and events\nconst countdownText = [\"\", \"Ready\", \"Ready\", \"3\", \"2\", \"1\", \"Go!\"];\nconst instructionText = [];\nconst audio = new Audio(readySound);\n\nvar audioFiles = [\n  \"https://hellowhirl.github.io/react-seconds-counter-game/static/media/ready2count.05013ceb.m4a\",\n];\n\nfunction preloadAudio(url) {\n  var audio = new Audio();\n  // once this file loads, it will call loadedAudio()\n  // the file will be kept by the browser as cache\n  audio.addEventListener(\"canplaythrough\", loadedAudio, false);\n  audio.src = url;\n}\n\nvar loaded = 0;\nfunction loadedAudio() {\n  // this will be called every time an audio file is loaded\n  // we keep track of the loaded files vs the requested files\n  loaded++;\n  if (loaded == audioFiles.length) {\n    // all have loaded\n    init();\n  }\n}\n\n// var player = document.getElementById(\"player\");\nfunction play(index) {\n  audio.src = audioFiles[index];\n  audio.play();\n  audio.pause();\n}\n\nfunction init() {\n  // do your stuff here, audio has been loaded\n  // for example, play all files one after the other\n  var i = 0;\n  // once the audio ends, play the next one\n  audio.onended = function () {\n    i++;\n    if (i >= audioFiles.length) {\n      // end\n      return;\n    }\n    play(i);\n  };\n  // play the first file\n  play(i);\n}\n\n// we start preloading all the audio files\nfor (var i in audioFiles) {\n  preloadAudio(audioFiles[i]);\n}\n\nclass App extends Component {\n  state = {\n    counter: countdownText,\n    gameOn: false,\n    gameOver: false,\n    secondsCountingStarted: false,\n    time: 0,\n    startTime: 0,\n    updatedTime: 0,\n  };\n\n  startButtonClicked = () => {\n    audio.play();\n    this.setState({ gameOn: true });\n    this.handleCountdownText();\n  };\n\n  handleCountdownText = () => {\n    const counter = [...this.state.counter];\n\n    if (counter.length > 1) {\n      setTimeout(() => {\n        counter.shift();\n        this.setState({ counter });\n        this.handleCountdownText();\n      }, 1000);\n    } else {\n      this.clockStart();\n      this.setState({ secondsCountingStarted: true });\n    }\n  };\n\n  tick = () => {\n    let updatedTime = new Date().getTime();\n    let difference = updatedTime - this.state.startTime;\n\n    this.setState({\n      time: ((difference % (1000 * 60)) / 1000).toFixed(2),\n    });\n  };\n\n  clockStart = () => {\n    this.setState({ startTime: new Date().getTime() });\n    this.intervalID = setInterval(() => this.tick(), 10);\n  };\n\n  clockStop = () => {\n    clearInterval(this.intervalID);\n    this.setState({ secondsCountingStarted: false, gameOver: true });\n  };\n\n  addTimerClasses = () => {\n    let base = \"row justify-content-center gameCounter \";\n    if (!this.state.gameOn && !this.state.secondsCountingStarted) return base;\n    if (this.state.gameOn && !this.state.secondsCountingStarted)\n      return base + \"unhidden\";\n    if (this.state.secondsCountingStarted && this.state.gameOn)\n      return base + \"fade-out\";\n  };\n\n  resetGame = () => {\n    this.setState({\n      counter: countdownText,\n      gameOn: false,\n      gameOver: false,\n      secondsCountingStarted: false,\n      time: 0,\n      startTime: 0,\n      updatedTime: 0,\n    });\n  };\n\n  componentDidMount() {\n    document.title = \"Seconds Counter Game\";\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\"></header>\n        <div className=\"container\">\n          <h1 className=\"row justify-content-center\">10 Seconds</h1>\n          <h4 className=\"row instructions justify-content-center\">the game</h4>\n          <p className=\"row instructions justify-content-center\">\n            press\n            <span style={{ display: \"contents\", fontWeight: \"bold\" }}>\n              {\" \"}\n              Start\n            </span>\n            , then press{\" \"}\n            <span style={{ display: \"contents\", fontWeight: \"bold\" }}>\n              {\" \"}\n              Stop{\" \"}\n            </span>{\" \"}\n            after{\" \"}\n            <span style={{ display: \"contents\", fontWeight: \"bold\" }}>\n              {\" \"}\n              10 seconds{\" \"}\n            </span>\n          </p>\n          <MessageBox message={this.state.counter[0]} />\n          <StartButton\n            onStartButtonClick={this.startButtonClicked}\n            gameOn={this.state.gameOn}\n            resetGame={this.resetGame}\n            gameOver={this.state.gameOver}\n            secondsCountingStarted={this.state.secondsCountingStarted}\n            clockStop={this.clockStop}\n          />\n          <GameBoard\n            time={this.state.time}\n            addTimerClasses={this.addTimerClasses}\n          />\n          <ResultsDisplay\n            secondsCountingStarted={this.state.secondsCountingStarted}\n            time={this.state.time}\n            counter={this.state.counter}\n            gameOn={this.state.gameOn}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","module.exports = __webpack_public_path__ + \"static/media/ready2count.05013ceb.m4a\";"],"sourceRoot":""}