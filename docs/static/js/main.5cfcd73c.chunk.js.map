{"version":3,"sources":["components/messageBox.jsx","components/startButton.jsx","components/gameBoard.jsx","App.js","index.js","assets/ready2count.m4a"],"names":["MessageBox","message","secondsCountingStarted","time","counter","gameOn","gameOver","Fragment","style","height","className","length","StartButton","onStartButtonClick","clockStop","resetGame","onClick","disabled","GameBoard","addTimerClasses","countdownText","audio","Audio","readySound","App","state","startTime","updatedTime","instructionText","startButtonClicked","play","setState","handleCountdownText","setTimeout","shift","clockStart","tick","difference","Date","getTime","toFixed","intervalID","setInterval","clearInterval","base","setInstructions","setInstructionsClasses","document","title","this","Component","ReactDOM","render","getElementById","module","exports"],"mappings":"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","file":"static/js/main.5cfcd73c.chunk.js","sourcesContent":["import React from \"react\";\n\nconst MessageBox = ({\n  message,\n  secondsCountingStarted,\n  time,\n  counter,\n  gameOn,\n  gameOver,\n}) => {\n  return (\n    <React.Fragment>\n      {!gameOver && (\n        <div style={{ height: 100 }} className=\"row justify-content-center\">\n          <div className=\"gameMessage\">{message}</div>\n        </div>\n      )}\n\n      {!secondsCountingStarted && time >= 9.5 && time <= 10.5 && (\n        <div style={{ height: 100 }} className=\"row justify-content-center\">\n          <div className=\"messageSuccess\">Excellent!</div>\n        </div>\n      )}\n      {counter.length === 1 && gameOn && !secondsCountingStarted && time < 9.5 && (\n        <div style={{ height: 100 }} className=\"row justify-content-center\">\n          <div className=\"messageFailure\">Too Quick</div>\n        </div>\n      )}\n      {!secondsCountingStarted && time > 10.5 && (\n        <div style={{ height: 100 }} className=\"row justify-content-center\">\n          <div className=\"messageFailure\">Too Slow</div>\n        </div>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default MessageBox;\n","import React from \"react\";\n\nconst StartButton = ({\n  onStartButtonClick,\n  gameOn,\n  gameOver,\n  secondsCountingStarted,\n  clockStop,\n  resetGame,\n}) => {\n  return (\n    <React.Fragment>\n      <div className=\"row startContainer justify-content-center\">\n        {!gameOn && !gameOver && (\n          <button\n            className=\"btn btn-primary mt-3 mb-3\"\n            onClick={() => {\n              onStartButtonClick();\n            }}\n            disabled={gameOn ? \"disabled\" : \"\"}\n          >\n            START\n          </button>\n        )}\n      </div>\n      <div className=\"row justify-content-center\">\n        {gameOn && !gameOver && (\n          <button\n            className=\"btn btn-primary mt-3 mb-3\"\n            onClick={() => clockStop()}\n            disabled={secondsCountingStarted ? \"\" : \"disabled\"}\n          >\n            STOP\n          </button>\n        )}\n      </div>\n      <div className=\"row justify-content-center\">\n        {gameOver ? (\n          <button\n            className=\"btn btn-primary mt-3 mb-3\"\n            onClick={() => resetGame()}\n          >\n            RESET\n          </button>\n        ) : null}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default StartButton;\n","import React from \"react\";\n\nconst GameBoard = ({ time, addTimerClasses }) => {\n  return (\n    <React.Fragment>\n      <div className={addTimerClasses()}>{time}</div>\n    </React.Fragment>\n  );\n};\n\nexport default GameBoard;\n","import React, { Component } from \"react\";\nimport MessageBox from \"./components/messageBox\";\nimport StartButton from \"./components/startButton\";\nimport \"./App.css\";\nimport GameBoard from \"./components/gameBoard\";\nimport ResultsDisplay from \"./components/resultsDisplay\";\nimport readySound from \"./assets/ready2count.m4a\";\n\n// component interface: inputs and events\nconst countdownText = [\"\", \"Ready\", \"Ready\", \"3\", \"2\", \"1\", \"Go!\"];\nconst audio = new Audio(readySound);\n\n// const HtmlWebpackPlugin = require(\"html-webpack-plugin\");\n\n// new HtmlWebpackPlugin({\n//   favicon: \"./src/favicon.png\",\n// });\n\n// if (navigator.userAgent.match(\"Macintosh\")) console.log(\"yes\");\n\nclass App extends Component {\n  state = {\n    counter: countdownText,\n    gameOn: false,\n    gameOver: false,\n    secondsCountingStarted: false,\n    time: 0,\n    startTime: 0,\n    updatedTime: 0,\n    instructionText: [\n      \"press START\",\n      \"press STOP after 10 seconds\",\n      \"game over\",\n    ],\n  };\n\n  startButtonClicked = () => {\n    audio.play();\n    this.setState({ gameOn: true });\n    this.handleCountdownText();\n  };\n\n  handleCountdownText = () => {\n    const counter = [...this.state.counter];\n\n    if (counter.length > 1) {\n      setTimeout(() => {\n        counter.shift();\n        this.setState({ counter });\n        this.handleCountdownText();\n      }, 1000);\n    } else {\n      this.clockStart();\n      this.setState({ secondsCountingStarted: true });\n    }\n  };\n\n  tick = () => {\n    let updatedTime = new Date().getTime();\n    let difference = updatedTime - this.state.startTime;\n\n    this.setState({\n      time: ((difference % (1000 * 60)) / 1000).toFixed(2),\n    });\n  };\n\n  clockStart = () => {\n    this.setState({ startTime: new Date().getTime() });\n    this.intervalID = setInterval(() => this.tick(), 10);\n  };\n\n  clockStop = () => {\n    clearInterval(this.intervalID);\n    this.setState({ secondsCountingStarted: false, gameOver: true });\n  };\n\n  addTimerClasses = () => {\n    let base = \"row justify-content-center gameCounter \";\n    if (!this.state.gameOn && !this.state.secondsCountingStarted) return base;\n    if (this.state.gameOn && !this.state.secondsCountingStarted)\n      return base + \"unhidden\";\n    if (this.state.secondsCountingStarted && this.state.gameOn)\n      return base + \"fade-out\";\n  };\n\n  resetGame = () => {\n    this.setState({\n      counter: countdownText,\n      gameOn: false,\n      gameOver: false,\n      secondsCountingStarted: false,\n      time: 0,\n      startTime: 0,\n      updatedTime: 0,\n    });\n  };\n\n  setInstructions = () => {\n    if (!this.state.gameOn && !this.state.gameOver)\n      return this.state.instructionText[0];\n    if (this.state.gameOn && !this.state.gameOver)\n      return this.state.instructionText[1];\n    if (this.state.gameOver) return this.state.instructionText[2];\n  };\n\n  setInstructionsClasses = () => {\n    let classes = \"row justify-content-center \";\n    return (classes += !this.state.gameOn ? \"blinking\" : \"\");\n  };\n\n  componentDidMount() {\n    document.title = \"Seconds Counter Game\";\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\"></header>\n        <div className=\"container\">\n          <h1 className=\"row justify-content-center\">10 Seconds</h1>\n          <h4 className=\"row justify-content-center\">the game</h4>\n          <h6 className={this.setInstructionsClasses()}>\n            {this.setInstructions()}\n          </h6>\n          <MessageBox\n            message={this.state.counter[0]}\n            secondsCountingStarted={this.state.secondsCountingStarted}\n            time={this.state.time}\n            counter={this.state.counter}\n            gameOn={this.state.gameOn}\n            gameOver={this.state.gameOver}\n          />\n          <GameBoard\n            time={this.state.time}\n            addTimerClasses={this.addTimerClasses}\n          />\n          <StartButton\n            onStartButtonClick={this.startButtonClicked}\n            gameOn={this.state.gameOn}\n            resetGame={this.resetGame}\n            gameOver={this.state.gameOver}\n            secondsCountingStarted={this.state.secondsCountingStarted}\n            clockStop={this.clockStop}\n          />\n          {/* <ResultsDisplay\n            secondsCountingStarted={this.state.secondsCountingStarted}\n            time={this.state.time}\n            counter={this.state.counter}\n            gameOn={this.state.gameOn}\n          /> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","module.exports = __webpack_public_path__ + \"static/media/ready2count.05013ceb.m4a\";"],"sourceRoot":""}