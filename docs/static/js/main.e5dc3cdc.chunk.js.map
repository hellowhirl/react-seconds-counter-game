{"version":3,"sources":["components/messageBox.jsx","components/startButton.jsx","components/resultsDisplay.jsx","components/resetButton.jsx","App.js","index.js"],"names":["MessageBox","message","Fragment","style","height","className","StartButton","onStartButtonClick","gameOn","onClick","disabled","ResultsDisplay","secondsCountingStarted","time","counter","length","ResetButton","resetGame","gameOver","App","state","startTime","updatedTime","startButtonClicked","setState","handleCountdownText","setTimeout","shift","clockStart","tick","difference","Date","getTime","toFixed","intervalID","setInterval","clockStop","clearInterval","addClasses","this","Component","ReactDOM","render","document","getElementById"],"mappings":"sOAeeA,EAbI,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OACE,kBAAC,IAAMC,SAAP,KACE,yBACEC,MAAO,CAAEC,OAAQ,IACjBC,UAAU,0CAETJ,KCSMK,EAhBK,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,mBAAoBC,EAAa,EAAbA,OACzC,OACE,yBAAKH,UAAU,8BACb,4BACEA,UAAU,kBACVI,QAAS,WACPF,KAEFG,SAAUF,EAAS,WAAa,IALlC,WCgBSG,G,MAnBQ,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,uBAAwBC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,QAASN,EAAa,EAAbA,OAC/D,OACE,kBAAC,IAAMN,SAAP,KACE,yBAAKG,UAAU,+BACXO,GAA0BC,GAAQ,KAAOA,GAAQ,MACjD,0CAEkB,IAAnBC,EAAQC,QACPP,IACCI,GACDC,EAAO,KAAO,4CACdD,GAA0BC,EAAO,MACjC,yDCAKG,EAZK,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,SAChC,OACE,yBAAKb,UAAU,8BACZa,EACC,4BAAQb,UAAU,kBAAkBI,QAAS,kBAAMQ,MAAnD,SAGE,OC+GKE,E,4MA9GbC,MAAQ,CACNN,QAAS,CAAC,GAAI,SAAU,IAAK,IAAK,IAAK,OACvCN,QAAQ,EACRU,UAAU,EACVN,wBAAwB,EACxBC,KAAM,EACNQ,UAAW,EACXC,YAAa,G,EAGfC,mBAAqB,WACnB,EAAKC,SAAS,CAAEhB,QAAQ,IAExB,EAAKiB,uB,EAGPA,oBAAsB,WACpB,IAAMX,EAAO,YAAO,EAAKM,MAAMN,SAE3BA,EAAQC,OAAS,EACnBW,YAAW,WACTZ,EAAQa,QACR,EAAKH,SAAS,CAAEV,YAChB,EAAKW,wBACJ,MAEH,EAAKG,aACL,EAAKJ,SAAS,CAAEZ,wBAAwB,M,EAI5CiB,KAAO,WACL,IACIC,GADc,IAAIC,MAAOC,UACE,EAAKZ,MAAMC,UAE1C,EAAKG,SAAS,CACZX,MAAQiB,EAAU,IAAkB,KAAMG,QAAQ,M,EAItDL,WAAa,WACX,EAAKJ,SAAS,CAAEH,WAAW,IAAIU,MAAOC,YACtC,EAAKE,WAAaC,aAAY,kBAAM,EAAKN,SAAQ,K,EAGnDO,UAAY,WACVC,cAAc,EAAKH,YACnB,EAAKV,SAAS,CAAEZ,wBAAwB,EAAOM,UAAU,K,EAG3DoB,WAAa,WAEX,MADW,2CACK,EAAKlB,MAAMR,uBAAyB,WAAa,K,EAGnEK,UAAY,WACV,EAAKO,SAAS,CACZV,QAAS,CAAC,GAAI,SAAU,IAAK,IAAK,IAAK,OACvCN,QAAQ,EACRU,UAAU,EACVN,wBAAwB,EACxBC,KAAM,EACNQ,UAAW,EACXC,YAAa,K,uDAIP,IAAD,OACP,OACE,yBAAKjB,UAAU,OACb,4BAAQA,UAAU,eAClB,yBAAKA,UAAU,aACb,wBAAIA,UAAU,8BAAd,wBACA,wBAAIA,UAAU,8BAAd,uCAGA,kBAAC,EAAD,CAAYJ,QAASsC,KAAKnB,MAAMN,QAAQ,KACxC,kBAAC,EAAD,CACEP,mBAAoBgC,KAAKhB,mBACzBf,OAAQ+B,KAAKnB,MAAMZ,SAGrB,yBAAKH,UAAWkC,KAAKD,cAAeC,KAAKnB,MAAMP,MAC/C,yBAAKR,UAAU,8BACZkC,KAAKnB,MAAMZ,QACV,4BACEH,UAAU,4BACVI,QAAS,kBAAM,EAAK2B,aACpB1B,SAAU6B,KAAKnB,MAAMR,uBAAyB,GAAK,YAHrD,SASJ,kBAAC,EAAD,CACEA,uBAAwB2B,KAAKnB,MAAMR,uBACnCC,KAAM0B,KAAKnB,MAAMP,KACjBC,QAASyB,KAAKnB,MAAMN,QACpBN,OAAQ+B,KAAKnB,MAAMZ,SAErB,kBAAC,EAAD,CACES,UAAWsB,KAAKtB,UAChBC,SAAUqB,KAAKnB,MAAMF,iB,GAvGfsB,a,MCJlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.e5dc3cdc.chunk.js","sourcesContent":["import React from \"react\";\n\nconst MessageBox = ({ message }) => {\n  return (\n    <React.Fragment>\n      <div\n        style={{ height: 32 }}\n        className=\"row gameMessage justify-content-center\"\n      >\n        {message}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default MessageBox;\n","import React from \"react\";\n\nconst StartButton = ({ onStartButtonClick, gameOn }) => {\n  return (\n    <div className=\"row justify-content-center\">\n      <button\n        className=\"btn btn-primary\"\n        onClick={() => {\n          onStartButtonClick();\n        }}\n        disabled={gameOn ? \"disabled\" : \"\"}\n      >\n        START\n      </button>\n    </div>\n  );\n};\n\nexport default StartButton;\n","import React from \"react\";\n\nconst ResultsDisplay = ({ secondsCountingStarted, time, counter, gameOn }) => {\n  return (\n    <React.Fragment>\n      <div className=\"row justify-content-center\">\n        {!secondsCountingStarted && time >= 9.5 && time <= 10.5 && (\n          <h3>Excellent!</h3>\n        )}\n        {counter.length === 1 &&\n          gameOn &&\n          !secondsCountingStarted &&\n          time < 9.5 && <h3>Too Quick!!</h3>}\n        {!secondsCountingStarted && time > 10.5 && (\n          <h3>T o o _ S l o w . . .</h3>\n        )}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default ResultsDisplay;\n","import React from \"react\";\n\nconst ResetButton = ({ resetGame, gameOver }) => {\n  return (\n    <div className=\"row justify-content-center\">\n      {gameOver ? (\n        <button className=\"btn btn-primary\" onClick={() => resetGame()}>\n          RESET\n        </button>\n      ) : null}\n    </div>\n  );\n};\n\nexport default ResetButton;\n","import React, { Component } from \"react\";\nimport MessageBox from \"./components/messageBox\";\nimport StartButton from \"./components/startButton\";\nimport \"./App.css\";\nimport ResultsDisplay from \"./components/resultsDisplay\";\nimport ResetButton from \"./components/resetButton\";\n\n// component interface: inputs and events\n\nclass App extends Component {\n  state = {\n    counter: [\"\", \"Ready?\", \"3\", \"2\", \"1\", \"Go!\"],\n    gameOn: false,\n    gameOver: false,\n    secondsCountingStarted: false,\n    time: 0,\n    startTime: 0,\n    updatedTime: 0,\n  };\n\n  startButtonClicked = () => {\n    this.setState({ gameOn: true });\n\n    this.handleCountdownText();\n  };\n\n  handleCountdownText = () => {\n    const counter = [...this.state.counter];\n\n    if (counter.length > 1) {\n      setTimeout(() => {\n        counter.shift();\n        this.setState({ counter });\n        this.handleCountdownText();\n      }, 1000);\n    } else {\n      this.clockStart();\n      this.setState({ secondsCountingStarted: true });\n    }\n  };\n\n  tick = () => {\n    let updatedTime = new Date().getTime();\n    let difference = updatedTime - this.state.startTime;\n\n    this.setState({\n      time: ((difference % (1000 * 60)) / 1000).toFixed(2),\n    });\n  };\n\n  clockStart = () => {\n    this.setState({ startTime: new Date().getTime() });\n    this.intervalID = setInterval(() => this.tick(), 10);\n  };\n\n  clockStop = () => {\n    clearInterval(this.intervalID);\n    this.setState({ secondsCountingStarted: false, gameOver: true });\n  };\n\n  addClasses = () => {\n    let base = \"row justify-content-center gameCounter \";\n    return (base += this.state.secondsCountingStarted ? \"fade-out\" : \"\");\n  };\n\n  resetGame = () => {\n    this.setState({\n      counter: [\"\", \"Ready?\", \"3\", \"2\", \"1\", \"Go!\"],\n      gameOn: false,\n      gameOver: false,\n      secondsCountingStarted: false,\n      time: 0,\n      startTime: 0,\n      updatedTime: 0,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\"></header>\n        <div className=\"container\">\n          <h2 className=\"row justify-content-center\">Seconds counter game</h2>\n          <h6 className=\"row justify-content-center\">\n            Can you count 10 seconds perfectly?\n          </h6>\n          <MessageBox message={this.state.counter[0]} />\n          <StartButton\n            onStartButtonClick={this.startButtonClicked}\n            gameOn={this.state.gameOn}\n          />\n\n          <div className={this.addClasses()}>{this.state.time}</div>\n          <div className=\"row justify-content-center\">\n            {this.state.gameOn && (\n              <button\n                className=\"btn btn-primary mt-3 mb-3\"\n                onClick={() => this.clockStop()}\n                disabled={this.state.secondsCountingStarted ? \"\" : \"disabled\"}\n              >\n                STOP\n              </button>\n            )}\n          </div>\n          <ResultsDisplay\n            secondsCountingStarted={this.state.secondsCountingStarted}\n            time={this.state.time}\n            counter={this.state.counter}\n            gameOn={this.state.gameOn}\n          />\n          <ResetButton\n            resetGame={this.resetGame}\n            gameOver={this.state.gameOver}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}