{"version":3,"sources":["components/messageBox.jsx","components/startButton.jsx","components/resultsDisplay.jsx","components/resetButton.jsx","App.js","index.js","assets/ready2count.m4a"],"names":["MessageBox","message","Fragment","style","height","className","StartButton","onStartButtonClick","gameOn","onClick","disabled","ResultsDisplay","secondsCountingStarted","time","counter","marginBottom","marginTop","length","ResetButton","resetGame","gameOver","countdownText","audio","Audio","readySound","App","state","startTime","updatedTime","startButtonClicked","play","setState","handleCountdownText","setTimeout","shift","clockStart","tick","difference","Date","getTime","toFixed","intervalID","setInterval","clockStop","clearInterval","addClasses","this","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.eef6c155.chunk.js","sourcesContent":["import React from \"react\";\n\nconst MessageBox = ({ message }) => {\n  return (\n    <React.Fragment>\n      <div style={{ height: 100 }} className=\"row justify-content-center\">\n        <div className=\"gameMessage\">{message}</div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default MessageBox;\n","import React from \"react\";\n\nconst StartButton = ({ onStartButtonClick, gameOn }) => {\n  return (\n    <div className=\"row startContainer justify-content-center\">\n      <button\n        className=\"btn btn-primary\"\n        onClick={() => {\n          onStartButtonClick();\n        }}\n        disabled={gameOn ? \"disabled\" : \"\"}\n      >\n        START\n      </button>\n    </div>\n  );\n};\n\nexport default StartButton;\n","import React from \"react\";\n\nconst ResultsDisplay = ({ secondsCountingStarted, time, counter, gameOn }) => {\n  return (\n    <React.Fragment>\n      <div\n        style={{ marginBottom: 20, marginTop: 10 }}\n        className=\"row justify-content-center\"\n      >\n        {!secondsCountingStarted && time >= 9.5 && time <= 10.5 && (\n          <h3>Excellent!</h3>\n        )}\n        {counter.length === 1 &&\n          gameOn &&\n          !secondsCountingStarted &&\n          time < 9.5 && <h3>Too Quick!!</h3>}\n        {!secondsCountingStarted && time > 10.5 && (\n          <h3>T o o _ S l o w . . .</h3>\n        )}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default ResultsDisplay;\n","import React from \"react\";\n\nconst ResetButton = ({ resetGame, gameOver }) => {\n  return (\n    <div className=\"row justify-content-center\">\n      {gameOver ? (\n        <button className=\"btn btn-primary\" onClick={() => resetGame()}>\n          RESET\n        </button>\n      ) : null}\n    </div>\n  );\n};\n\nexport default ResetButton;\n","import React, { Component } from \"react\";\nimport MessageBox from \"./components/messageBox\";\nimport StartButton from \"./components/startButton\";\nimport \"./App.css\";\nimport ResultsDisplay from \"./components/resultsDisplay\";\nimport ResetButton from \"./components/resetButton\";\nimport readySound from \"./assets/ready2count.m4a\";\n\n// component interface: inputs and events\nconst countdownText = [\"\", \"Ready\", \"Ready\", \"3\", \"2\", \"1\", \"Go!\"];\nconst audio = new Audio(readySound);\n\nclass App extends Component {\n  state = {\n    counter: countdownText,\n    gameOn: false,\n    gameOver: false,\n    secondsCountingStarted: false,\n    time: 0,\n    startTime: 0,\n    updatedTime: 0,\n  };\n\n  startButtonClicked = () => {\n    audio.play();\n    this.setState({ gameOn: true });\n    this.handleCountdownText();\n  };\n\n  handleCountdownText = () => {\n    const counter = [...this.state.counter];\n\n    if (counter.length > 1) {\n      setTimeout(() => {\n        counter.shift();\n        this.setState({ counter });\n        this.handleCountdownText();\n      }, 1000);\n    } else {\n      this.clockStart();\n      this.setState({ secondsCountingStarted: true });\n    }\n  };\n\n  tick = () => {\n    let updatedTime = new Date().getTime();\n    let difference = updatedTime - this.state.startTime;\n\n    this.setState({\n      time: ((difference % (1000 * 60)) / 1000).toFixed(2),\n    });\n  };\n\n  clockStart = () => {\n    this.setState({ startTime: new Date().getTime() });\n    this.intervalID = setInterval(() => this.tick(), 10);\n  };\n\n  clockStop = () => {\n    clearInterval(this.intervalID);\n    this.setState({ secondsCountingStarted: false, gameOver: true });\n  };\n\n  addClasses = () => {\n    let base = \"row justify-content-center gameCounter \";\n    return (base += this.state.secondsCountingStarted ? \"fade-out\" : \"\");\n  };\n\n  resetGame = () => {\n    this.setState({\n      counter: countdownText,\n      gameOn: false,\n      gameOver: false,\n      secondsCountingStarted: false,\n      time: 0,\n      startTime: 0,\n      updatedTime: 0,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\"></header>\n        <div className=\"container\">\n          <h2 className=\"row justify-content-center\">Seconds counter game</h2>\n          <h6 className=\"row instructions justify-content-center\">\n            Can you count 10 seconds perfectly?\n          </h6>\n          <MessageBox message={this.state.counter[0]} />\n          <StartButton\n            onStartButtonClick={this.startButtonClicked}\n            gameOn={this.state.gameOn}\n          />\n\n          <div className={this.addClasses()}>{this.state.time}</div>\n          <div className=\"row justify-content-center\">\n            {this.state.gameOn && (\n              <button\n                className=\"btn btn-primary mt-3 mb-3\"\n                onClick={() => this.clockStop()}\n                disabled={this.state.secondsCountingStarted ? \"\" : \"disabled\"}\n              >\n                STOP\n              </button>\n            )}\n          </div>\n          <ResultsDisplay\n            secondsCountingStarted={this.state.secondsCountingStarted}\n            time={this.state.time}\n            counter={this.state.counter}\n            gameOn={this.state.gameOn}\n          />\n          <ResetButton\n            resetGame={this.resetGame}\n            gameOver={this.state.gameOver}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","module.exports = __webpack_public_path__ + \"static/media/ready2count.05013ceb.m4a\";"],"sourceRoot":""}